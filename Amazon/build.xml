<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
			  
			  
			  <project name="Amazon" default="war" basedir="D:\Devops\EclipsePrograms\Selinium\Amazon">
			  
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../eclipse-jee-neon-RC2-win32-x86_64/eclipse/"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Amazon.classpath">
        <pathelement location="bin"/>
        <pathelement location="../../../Selinium/client-combined-3.8.1.jar"/>
        <pathelement location="../../../Selinium/client-combined-3.8.1-sources.jar"/>
        <pathelement location="../../../Selinium/libs/byte-buddy-1.7.5.jar"/>
        <pathelement location="../../../Selinium/libs/commons-codec-1.10.jar"/>
        <pathelement location="../../../Selinium/libs/commons-exec-1.3.jar"/>
        <pathelement location="../../../Selinium/libs/commons-logging-1.2.jar"/>
        <pathelement location="../../../Selinium/libs/gson-2.8.2.jar"/>
        <pathelement location="../../../Selinium/libs/guava-23.0.jar"/>
        <pathelement location="../../../Selinium/libs/httpclient-4.5.3.jar"/>
        <pathelement location="../../../Selinium/libs/httpcore-4.4.6.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
	
	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" debug="yes">
			<classpath refid="Amazon.classpath" />
		</javac>
	</target>
	
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="Amazon.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
	
	 
	 
	 <jar destfile="mrjar.jar">
      <manifest>
        <!-- special mf-entry according to the spec -->
        <attribute name="Multi-Release" value="true"/>
      </manifest>
      <!-- directory structure according to the spec ... -->
      <!-- ... default classes loadable by old (<Java9) versions -->
      <fileset dir="${java.classes}"/>
      <!-- ... per release classes, require Java9+ for loadable via standard ClassLoader -->
      <zipfileset prefix="META-INF/versions/9/" dir="${java9.classes}"/>
    </jar>
	 
	
	<target name="war" description="creating WAR file">
     <war destfile="Da.war" needxmlfile="false">
	<fileset dir="D:\Devops\EclipsePrograms\Selinium\Amazon"/>
	</war>
	</target>

    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="LandingPage">
        <java classname="com.automation.Amazon.LandingPage" failonerror="true" fork="yes">
            <classpath refid="Amazon.classpath"/>
        </java>
    </target>
</project>
